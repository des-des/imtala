import{S as ce,i as me,s as ve,e as i,t as f,j as v,c as r,a as n,g as p,d as t,l as w,f as a,H as s,I as B,v as we,w as _e,b as ye,x as Ee,p as de,n as be,A as xe}from"../chunks/vendor-34c9f772.js";function Ie(J){let u,x,_,E,I,y,c,d,q,h,l,m,U,L,G,O,$,K,R,H,N,M,P,V,j,b,W,S,X,Y,T,Z,Q,A,g,k,D,C,ee;return{c(){u=i("h1"),x=f("Graphql Documentation Creator"),_=v(),E=i("p"),I=f("Easily create lightweight documentation for your Graphql API."),y=v(),c=i("p"),d=f("The resulting website has the following attributes"),q=v(),h=i("ul"),l=i("li"),m=f("Fully static, which means you can host on any file server."),U=v(),L=i("li"),G=f("Each type document has its own rendered HTML document - Snappy and fast UI, good SEO & a low browser footprint."),O=v(),$=i("p"),K=f("This tool generates a static website - for every query, mutation or type in you schema a lightweight html page is created. Fast, simple and themeable."),R=v(),H=i("h2"),N=f("Usage"),M=v(),P=i("h3"),V=f("Use as a svelte component"),j=v(),b=i("p"),W=f("If you are using svelte and want to integrate gql docs into an existing website you can use the "),S=i("code"),X=f("GqlDocumentation"),Y=f(" component exposed the the npm module: "),T=i("code"),Z=f("@insola/gql-docs-svelte"),Q=v(),A=i("h3"),g=f("Use as a cli tool"),k=v(),D=i("ul"),C=i("li"),ee=f("Raise an issue if you want to use this tool to create a static site without using svelte, Ill publish a cli tool that will wrap all this up and generate a static website.")},l(e){u=r(e,"H1",{});var o=n(u);x=p(o,"Graphql Documentation Creator"),o.forEach(t),_=w(e),E=r(e,"P",{});var te=n(E);I=p(te,"Easily create lightweight documentation for your Graphql API."),te.forEach(t),y=w(e),c=r(e,"P",{});var le=n(c);d=p(le,"The resulting website has the following attributes"),le.forEach(t),q=w(e),h=r(e,"UL",{});var z=n(h);l=r(z,"LI",{});var se=n(l);m=p(se,"Fully static, which means you can host on any file server."),se.forEach(t),U=w(z),L=r(z,"LI",{});var ae=n(L);G=p(ae,"Each type document has its own rendered HTML document - Snappy and fast UI, good SEO & a low browser footprint."),ae.forEach(t),z.forEach(t),O=w(e),$=r(e,"P",{});var oe=n($);K=p(oe,"This tool generates a static website - for every query, mutation or type in you schema a lightweight html page is created. Fast, simple and themeable."),oe.forEach(t),R=w(e),H=r(e,"H2",{});var ie=n(H);N=p(ie,"Usage"),ie.forEach(t),M=w(e),P=r(e,"H3",{});var re=n(P);V=p(re,"Use as a svelte component"),re.forEach(t),j=w(e),b=r(e,"P",{});var F=n(b);W=p(F,"If you are using svelte and want to integrate gql docs into an existing website you can use the "),S=r(F,"CODE",{});var ne=n(S);X=p(ne,"GqlDocumentation"),ne.forEach(t),Y=p(F," component exposed the the npm module: "),T=r(F,"CODE",{});var ue=n(T);Z=p(ue,"@insola/gql-docs-svelte"),ue.forEach(t),F.forEach(t),Q=w(e),A=r(e,"H3",{});var fe=n(A);g=p(fe,"Use as a cli tool"),fe.forEach(t),k=w(e),D=r(e,"UL",{});var pe=n(D);C=r(pe,"LI",{});var he=n(C);ee=p(he,"Raise an issue if you want to use this tool to create a static site without using svelte, Ill publish a cli tool that will wrap all this up and generate a static website."),he.forEach(t),pe.forEach(t)},m(e,o){a(e,u,o),s(u,x),a(e,_,o),a(e,E,o),s(E,I),a(e,y,o),a(e,c,o),s(c,d),a(e,q,o),a(e,h,o),s(h,l),s(l,m),s(h,U),s(h,L),s(L,G),a(e,O,o),a(e,$,o),s($,K),a(e,R,o),a(e,H,o),s(H,N),a(e,M,o),a(e,P,o),s(P,V),a(e,j,o),a(e,b,o),s(b,W),s(b,S),s(S,X),s(b,Y),s(b,T),s(T,Z),a(e,Q,o),a(e,A,o),s(A,g),a(e,k,o),a(e,D,o),s(D,C),s(C,ee)},p:B,i:B,o:B,d(e){e&&t(u),e&&t(_),e&&t(E),e&&t(y),e&&t(c),e&&t(q),e&&t(h),e&&t(O),e&&t($),e&&t(R),e&&t(H),e&&t(M),e&&t(P),e&&t(j),e&&t(b),e&&t(Q),e&&t(A),e&&t(k),e&&t(D)}}}class qe extends ce{constructor(u){super();me(this,u,null,Ie,ve,{})}}function Le(J){let u,x,_,E,I,y,c,d,q,h;return u=new qe({}),{c(){we(u.$$.fragment),x=v(),_=i("h2"),E=f("Examples"),I=v(),y=i("ul"),c=i("li"),d=i("a"),q=f("Github's public GraphQL API"),this.h()},l(l){_e(u.$$.fragment,l),x=w(l),_=r(l,"H2",{});var m=n(_);E=p(m,"Examples"),m.forEach(t),I=w(l),y=r(l,"UL",{});var U=n(y);c=r(U,"LI",{});var L=n(c);d=r(L,"A",{href:!0});var G=n(d);q=p(G,"Github's public GraphQL API"),G.forEach(t),L.forEach(t),U.forEach(t),this.h()},h(){ye(d,"href","examples/github")},m(l,m){Ee(u,l,m),a(l,x,m),a(l,_,m),s(_,E),a(l,I,m),a(l,y,m),s(y,c),s(c,d),s(d,q),h=!0},p:B,i(l){h||(de(u.$$.fragment,l),h=!0)},o(l){be(u.$$.fragment,l),h=!1},d(l){xe(u,l),l&&t(x),l&&t(_),l&&t(I),l&&t(y)}}}class Ge extends ce{constructor(u){super();me(this,u,null,Le,ve,{})}}export{Ge as default};
